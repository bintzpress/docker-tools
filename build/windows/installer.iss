; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#if Ver < EncodeVer(6,0,0,0)
  #error This script requires Inno Setup 6 or later
#endif

#define MyAppName "Docker Tools"
#define MyAppVersion "1.1.0"
#define MyAppPublisher "Bintz Press"
#define MyAppURL "https://bintzpress.com"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{9506CE55-5FFA-4B91-81BC-3AF912087322}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
DefaultGroupName={#MyAppName}
DisableProgramGroupPage=yes
LicenseFile=..\..\LICENSE.txt
; Uncomment the following line to run in non administrative install mode (install for current user only.)
OutputDir=..\..\target\windows
OutputBaseFilename=docker-tools-installer
Compression=lzma
SolidCompression=yes
WizardStyle=modern
ArchitecturesInstallIn64BitMode=x64

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Files]
Source: "..\..\target\windows\dt-build.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\..\target\windows\dt-devcontainer.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\..\templates\*"; DestDir: "{app}\templates"; Flags: recursesubdirs createallsubdirs
Source: "EditPath.exe"; DestDir: "{app}"; AfterInstall: MyAfterInstall

; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Registry]
Root: HKLM; Subkey: "Software\Bintz Press"; Flags: uninsdeletekeyifempty;
Root: HKLM; Subkey: "Software\Bintz Press\Docker Tools"; Flags: uninsdeletekey; ValueType: string; ValueName: "InstallPath"; ValueData: "{app}"

[Tasks]
Name: addPath; Description: "Add to system &path"; 

[UninstallDelete]
Type: files; Name: "{app}"

[Code]
var
  IsUpgradeCached: Boolean;

function IsUpgrade: Boolean;
var
  S: string;
begin
  Result := RegQueryStringValue(HKLM, 'Software\Bintz Press\Docker Tools', 'InstallPath', S);
end;

function InitializeSetup(): Boolean;
begin
  IsUpgradeCached := IsUpgrade;

  if IsUpgradeCached then
  begin
    MsgBox('Unable to upgrade. Must uninstall before installing again.',mbError,MB_OK);
    Result := False
  end
  else
  begin
    Result := True;
  end;
end;

procedure MyAfterInstall();
var
 ResCode : Integer;
begin
 if WizardIsTaskSelected('addPath') then
 begin
    if Exec(ExpandConstant('{app}' + '\EditPath.exe'),
            ExpandConstant('-s --add "{app}"'), '', SW_HIDE, ewWaitUntilTerminated, ResCode) then
    begin
      (* 183 is entry exists *)
      if (ResCode > 0) and (ResCode <> 183) then
      begin
        MsgBox('Unable to add to system path ' + IntToStr(ResCode),mbError,MB_OK)
      end;       
    end
    else
    begin
      MsgBox('Unable to add to system path',mbError,MB_OK)
    end;
  end
end;

function InitializeUninstall(): Boolean;
var
 ResCode : Integer;
begin
 if Exec(ExpandConstant('{app}' + '\EditPath.exe'),
         ExpandConstant('-s --remove "{app}"'), '', SW_HIDE, ewWaitUntilTerminated, ResCode) then
 begin
   (* 3 is entry does not exist *)
   if (ResCode > 0) and (ResCode <> 3) then
   begin
      MsgBox('Unable to remove from system path ' + IntToStr(ResCode),mbError,MB_OK)
   end;       
 end
 else
 begin
    MsgBox('Unable to remove from system path',mbError,MB_OK)
  end;
  result := true;
end;

procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
begin
  case CurUninstallStep of
    usPostUninstall:
      begin
        RemoveDir(ExpandConstant('{app}'))
      end;
  end;
end;